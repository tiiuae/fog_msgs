name: main

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:
  tii-deb-build:
    runs-on: ubuntu-latest
    steps:

      - name: Checkout fog_msgs
        uses: actions/checkout@v2
        with:
          path: fog_msgs

      - name: Checkout ci-scripts
        uses: actions/checkout@v2
        with:
          repository: tiiuae/fogsw-ci-scripts
          path: fogsw-ci-scripts

      # Run docker build
      - name: Run fog-msgs docker build
        run: |
          set -eux
          mkdir bin
          pushd fogsw-ci-scripts
          export ROS=1
          ./generate_deb.sh ../fog_msgs ../bin/
          popd

      - name: Install jfrog CLI tool
        env:
          JFROG_CLI_URL: https://artifactory.ssrc.fi/artifactory/gen-public-local/tools/jfrog/jfrog-1.45.2.tar.gz
        if: github.event_name == 'push'
        run: |
          set -exu
          mkdir -p "$GITHUB_WORKSPACE/.jfrog/bin"
          curl -L "$JFROG_CLI_URL" -o "$GITHUB_WORKSPACE/.jfrog/jfrog.tar.gz"
          tar -C "$GITHUB_WORKSPACE/.jfrog/bin" -zxf "$GITHUB_WORKSPACE/.jfrog/jfrog.tar.gz"
          echo "$GITHUB_WORKSPACE/.jfrog/bin" >> "$GITHUB_PATH"
          echo "JFROG_CLI_HOME_DIR=$GITHUB_WORKSPACE/.jfrog" >> "$GITHUB_ENV"

      - name: Upload to Artifactory
        env:
          ARTIFACTORY_TOKEN: ${{ secrets.ARTIFACTORY_TOKEN }}
          ARTIFACTORY_REPO: debian-public-local
          DISTRIBUTION: focal
          COMPONENT: fog-sw
          ARCHITECTURE: amd64
          BUILD_NAME: fog_msgs
          CI: true
        if: github.event_name == 'push'
        run: |
          set -exu
          jfrog rt c import "$ARTIFACTORY_TOKEN"
          jfrog rt ping
          pkg=$(find bin -name 'ros-foxy-fog-msgs*.deb')
          jfrog rt u --deb "$DISTRIBUTION/$COMPONENT/$ARCHITECTURE" \
                     --target-props COMMIT="$GITHUB_SHA" \
                     --build-name "$BUILD_NAME" \
                     --build-number "$GITHUB_SHA" \
                     "$pkg" \
                     "$ARTIFACTORY_REPO"
          jfrog rt build-publish "$BUILD_NAME" "$GITHUB_SHA"
          jfrog rt bpr "$BUILD_NAME" "$GITHUB_SHA" "$ARTIFACTORY_REPO" \
                       --status dev \
                       --comment "development build"

      - name: trigger fog-drone build
        env:
          USER: ${{ secrets.DISPATCH_USER }}
          TOKEN: ${{ secrets.DISPATCH_TOKEN }}
        if: github.event_name == 'push'
        run: |
          curl -X POST https://api.github.com/repos/tiiuae/dronsole-containers/dispatches \
               -H 'Accept: application/vnd.github.everest-preview+json' \
               -u $USER:$TOKEN \
               --data '{"event_type": "rebuild-fog-drone", "client_payload": { "repository": "'"$GITHUB_REPOSITORY"'" }}'

  update-rclgo-msgs:
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout fog_msgs
        uses: actions/checkout@v2
        with:
          path: fog_msgs

      - name: Checkout rclgo-msgs
        uses: actions/checkout@v2
        with:
          path: rclgo-msgs

      - name: Setup Go environment
        uses: actions/setup-go@v2
        with:
          go-version: 1.16

      - name: Install dependencies
        run: |
          echo "deb http://packages.ros.org/ros2/ubuntu focal main" | sudo tee etc/apt/sources.list.d/ros2-latest.list
          sudo apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys C1CF6E31E6BADE8868B172B4F42ED6FBAB17C654
          sudo apt-get update
          sudo apt-get install -y ros-foxy-desktop

      - name: Generate and push bindings
        run: |
          . /opt/ros/foxy/setup.sh
          rclgo-msgs/.tools/generate-package.sh fog_msgs rclgo-msgs
